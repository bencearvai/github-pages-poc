name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    permissions:
      id-token: write
      contents: read
      pages: write
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npx playwright test --reporter=html

    - name: Setup Pages
      uses: actions/configure-pages@v4

    # ðŸ”¹ Pull down existing gh-pages content to preserve old reports & index
    - name: Download existing Pages content
      run: |
        git clone --depth 1 --branch gh-pages "https://github.com/${GITHUB_REPOSITORY}.git" pages || mkdir -p pages

    # ðŸ”¹ Copy the new report into a timestamped folder
    - name: Copy new report
      run: |
        mkdir -p pages/reports
        DATE=$(date +'%Y-%m-%d_%H-%M-%S')
        SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)

        REPORT_DIR="reports/${DATE}_${SHORT_SHA}"
        mkdir -p "pages/${REPORT_DIR}"
        cp -r playwright-report/* "pages/${REPORT_DIR}"

        echo "REPORT_DIR=$REPORT_DIR" >> $GITHUB_ENV
        echo "DATE=$DATE" >> $GITHUB_ENV
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV

    # ðŸ”¹ Update index.html with new link under the title
    - name: Update index.html
      run: |
        INDEX_FILE=pages/index.html

        # Create skeleton if index doesn't exist
        if [ ! -f "$INDEX_FILE" ]; then
          echo "<!DOCTYPE html><html><head><meta charset='utf-8'><title>Playwright Reports</title></head><body><h1>Playwright Reports</h1><ul>" > $INDEX_FILE
          echo "</ul></body></html>" >> $INDEX_FILE
        fi

        # Build link entry with date + commit SHA
        NEW_ENTRY="<li><a href='${REPORT_DIR}/index.html'>Report from ${DATE} (commit ${SHORT_SHA})</a></li>"

        # Insert new entry right after <ul> (so it's always under the title, latest first)
        awk -v entry="$NEW_ENTRY" '/<ul>/{print;print entry;next}1' $INDEX_FILE > temp && mv temp $INDEX_FILE

    # ðŸ”¹ Upload final site to Pages
    - name: Upload artifact to GitHub Pages
      uses: actions/upload-pages-artifact@v4
      with:
        path: pages

    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
